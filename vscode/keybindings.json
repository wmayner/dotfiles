// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "command": "workbench.action.navigateLeft",
        "key": "ctrl+h"
    },
    {
        "command": "workbench.action.navigateRight",
        "key": "ctrl+l"
    },
    {
        "command": "workbench.action.navigateUp",
        "key": "ctrl+k"
    },
    {
        "command": "workbench.action.navigateDown",
        "key": "ctrl+j"
    },
    {
        "command": "merge-conflict.next",
        "key": "alt+c ]",
        "when": "editorTextFocus && vim.mode == 'Normal'"
    },
    {
        "command": "merge-conflict.previous",
        "key": "alt+c [",
        "when": "editorTextFocus && vim.mode == 'Normal'"
    },
    {
        "command": "merge-conflict.accept.selection",
        "key": "alt+m enter",
        "when": "editorTextFocus && vim.mode == 'Normal'"
    },
    {
        "command": "merge-conflict.accept.current",
        "key": "alt+m 1",
        "when": "editorTextFocus && vim.mode == 'Normal'"
    },
    {
        "command": "merge-conflict.accept.incoming",
        "key": "alt+m 2",
        "when": "editorTextFocus && vim.mode == 'Normal'"
    },
    {
        "command": "merge-conflict.accept.both",
        "key": "alt+m 3",
        "when": "editorTextFocus && vim.mode == 'Normal'"
    },
    {
        "command": "workbench.action.toggleActivityBarVisibility",
        "key": "alt+b"
    },
    {
        "command": "workbench.action.navigateLeft",
        "key": "alt+h"
    },
    {
        "command": "workbench.action.navigateLeft",
        "key": "alt+h"
    },
    {
        "command": "workbench.action.navigateRight",
        "key": "alt+l"
    },
    {
        "command": "workbench.action.navigateUp",
        "key": "alt+k"
    },
    {
        "command": "workbench.action.navigateDown",
        "key": "alt+j"
    },
    {
        "command": "workbench.view.testing.focus",
        "key": "shift+cmd+a"
    },
    {
        "command": "-extension.vim_shift+tab",
        "key": "shift+tab",
        "when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "command": "toggleSuggestionDetails",
        "key": "shift+tab",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "command": "editor.action.triggerParameterHints",
        "key": "shift+tab",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "command": "jupyter.restartkernelandrunallcells",
        "key": "ctrl+shift+cmd+enter"
    },
    {
        "command": "jupyter.runallcellsabove",
        "key": "ctrl+shift+cmd+up"
    },
    {
        "command": "jupyter.runallcells",
        "key": "ctrl+cmd+enter"
    },
    {
        "command": "notebook.cell.collapseCellOutput",
        "key": "shift+f",
        "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
    },
    {
        "command": "-notebook.cell.collapseCellOutput",
        "key": "cmd+k t",
        "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
    },
    {
        "command": "notebook.cell.expandCellOutput",
        "key": "shift+v",
        "when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
    },
    {
        "command": "-notebook.cell.expandCellOutput",
        "key": "cmd+k t",
        "when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
    },
    {
        "command": "-notebook.cell.quitEdit",
        "key": "escape",
        "when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible"
    },
    {
        "command": "notebook.toggleLineNumbers",
        "key": "ctrl+shift+l",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused"
    },
    {
        "command": "-notebook.toggleLineNumbers",
        "key": "shift+l",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused"
    },
    {
        "command": "notebook.cell.paste",
        "key": "p",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "command": "-notebook.cell.delete",
        "key": "d d",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "command": "notebook.cell.cut",
        "key": "d d",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "command": "undo",
        "key": "u",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "command": "-jupyter.notebookeditor.keybind.toggleOutput",
        "key": "o",
        "when": "config.jupyter.enableKeyboardShortcuts && notebookEditorFocused && !inputFocus && notebookType == 'jupyter-notebook'"
    },
    {
        "command": "-list.toggleExpand",
        "key": "o",
        "when": "listFocus && !inputFocus"
    },
    {
        "command": "notebook.cell.insertCodeCellBelow",
        "key": "o",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "command": "notebook.centerActiveCell",
        "key": "z z",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "command": "-notebook.centerActiveCell",
        "key": "ctrl+l",
        "when": "notebookEditorFocused"
    },
    {
        "command": "jupyter.restartkernel",
        "key": "0 0",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "command": "workbench.action.nextEditor",
        "key": "shift+l",
        "when": "!inputFocus"
    },
    {
        "command": "workbench.action.previousEditor",
        "key": "shift+h",
        "when": "!inputFocus"
    },
    {
        "command": "notebook.cell.executeCellAndBelow",
        "key": "ctrl+shift+cmd+down"
    },
    {
        "command": "notebook.cell.executeCellsAbove",
        "key": "ctrl+shift+cmd+up"
    },
    {
        "command": "notebook.interruptExecution",
        "key": "i i",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "command": "notebook.interruptExecution",
        "key": "ctrl+c"
    },
    {
        "command": "notebook.cell.collapseCellInput",
        "key": "ctrl+shift+f",
        "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
    },
    {
        "command": "-notebook.cell.collapseCellInput",
        "key": "cmd+k cmd+c",
        "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
    },
    {
        "command": "notebook.cell.expandCellInput",
        "key": "ctrl+shift+v",
        "when": "notebookCellInputIsCollapsed && notebookCellListFocused"
    },
    {
        "command": "-notebook.cell.expandCellInput",
        "key": "cmd+k cmd+c",
        "when": "notebookCellInputIsCollapsed && notebookCellListFocused"
    },
    {
        "command": "notebook.cell.quitEdit",
        "key": "shift+escape",
        "when": "notebookEditorFocused && notebookOutputFocused"
    },
    {
        "command": "-notebook.cell.quitEdit",
        "key": "escape",
        "when": "notebookEditorFocused && notebookOutputFocused"
    },
    {
        "command": "notebook.cell.quitEdit",
        "key": "shift+escape",
        "when": "notebookEditorFocused && inputFocus"
    },
    {
        "command": "-notebook.cell.quitEdit",
        "key": "escape",
        "when": "inputFocus && notebookEditorFocused && vim.active && !editorHasSelection && !editorHoverVisible && vim.mode == 'Normal'"
    },
    {
        "command": "-notebook.cell.quitEdit",
        "key": "ctrl+enter",
        "when": "inputFocus && notebookEditorFocused && notebookCellType == 'markup'"
    },
    {
        "key": "shift+m",
        "command": "notebook.cell.joinBelow",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused"
    },
    {
        "key": "ctrl+alt+j",
        "command": "-notebook.cell.joinBelow",
        "when": "notebookEditorFocused"
    },
    {
        "key": "y y",
        "command": "notebook.cell.copy",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused"
    },
    {
        "key": "cmd+enter",
        "command": "jupyter.runcurrentcell",
        "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !jupyter.havenativecells && !notebookEditorFocused"
    },
    {
        "key": "ctrl+enter",
        "command": "-jupyter.runcurrentcell",
        "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !jupyter.havenativecells && !notebookEditorFocused"
    },
    {
        "key": "cmd+enter",
        "command": "notebook.cell.execute",
        "when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
    },
    {
        "key": "ctrl+enter",
        "command": "-notebook.cell.execute",
        "when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
    }
]